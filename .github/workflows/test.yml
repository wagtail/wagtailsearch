name: Search CI

on:
  push:
    branches:
      - main
      - 'stable/**'

  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read # to fetch code (actions/checkout)

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Python 3.9
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'
      - uses: pre-commit/action@v3.0.1

  test-sqlite:
    runs-on: ubuntu-latest
    needs: lint
    strategy:
      matrix:
        include:
          - python: '3.9'
            django: 'Django>=4.2,<5'

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}
      - name: Install
        run: |
          python -m pip install --upgrade pip setuptools wheel
          python -m pip install .[ci]
          pip install "${{ matrix.django }}"
      - name: Test
        run: python testmanage.py test

  test-postgres:
    runs-on: ubuntu-latest
    needs: lint
    strategy:
      matrix:
        include:
          - python: '3.11'
            django: 'Django>=5.1,<5.2'
            postgres: 'postgres:15'
            psycopg: 'psycopg>=3.2.9'

    services:
      postgres:
        image: ${{ matrix.postgres || 'postgres:12' }}
        env:
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}
      - name: Install
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install "${{ matrix.psycopg }}"
          python -m pip install .[ci]
          pip install "${{ matrix.django }}"
      - name: Test
        run: python testmanage.py test
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/wagtailsearch

  test-mysql:
    runs-on: ubuntu-latest
    continue-on-error: true
    needs: lint
    strategy:
      matrix:
        include:
          - python: '3.10'
            django: 'Django>=5.2,<5.3'
            mysql: 'mysql:8.4'
          - python: '3.12'
            django: 'Django>=5.2,<5.3'
            mysql: 'mariadb:11.4'

    services:
      mysql:
        image: ${{ matrix.mysql || 'mysql:8.0' }}
        env:
          MARIADB_ROOT_PASSWORD: root
          MYSQL_ROOT_PASSWORD: root
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_DATABASE: wagtailsearch
          HEALTH_CMD: ${{ startsWith(matrix.mysql, 'mariadb') && 'healthcheck.sh --connect --innodb_initialized' || 'mysqladmin --protocol=tcp ping' }}
        ports:
          - 3306:3306
        options: --health-cmd=$HEALTH_CMD --health-interval=10s --health-timeout=5s --health-retries=3 --cap-add=sys_nice

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}
      - name: Install
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install mysqlclient
          python -m pip install .[ci]
          pip install "${{ matrix.django }}"
      - name: Test
        run: python testmanage.py test
        env:
          DATABASE_URL: mysql://root:root@localhost:3306/wagtailsearch
